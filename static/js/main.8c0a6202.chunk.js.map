{"version":3,"sources":["components/Tabs/Tabs.tsx","components/Tabs/index.ts","components/Note/Note.tsx","components/Note/index.ts","components/NotesTab/index.ts","components/NotesTab/NotesTab.tsx","App.tsx","data/NotesContent.ts","index.tsx"],"names":["useStyles","makeStyles","container","width","height","overflow","tab","backgroundColor","Tabs","props","tabsContent","tabsLabels","React","useState","value","setValue","classes","Paper","root","variant","onChange","event","newValue","map","tabLabel","index","Tab","label","key","renderTabsLabels","onChangeIndex","tabContent","style","renderTabsContent","card","minHeight","padding","Note","noteContent","Card","Grid","item","Typography","align","content","signature","NotesTab","notesContent","spacing","direction","justify","alignItems","maxHeight","overflowY","overflowX","xs","renderNotes","App","className","marginBottom","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c0a6202.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Paper, Tabs, Tab } from '@material-ui/core';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default (props: TabsProps) => {\r\n  const { tabsContent, tabsLabels } = props;\r\n  const [value, setValue] = React.useState<number>(1);\r\n  const classes = useStyles()();\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index: number) => {\r\n    setValue(index);\r\n  };\r\n\r\n  const renderTabsLabels = (tabsLabels: string[]) => {\r\n    return tabsLabels.map((tabLabel, index) => {\r\n      return <Tab label={tabLabel} key={`tab${index}`} />;\r\n    });\r\n  };\r\n\r\n  const renderTabsContent = (tabsContent: any[]) => {\r\n    return tabsContent.map((tabContent, index) => {\r\n      return (\r\n        <div key={`tab-content-${index}`} style={{ height: '100%' }}>\r\n          {tabContent}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Paper classes={{ root: classes.container }}>\r\n      <Tabs value={value} variant=\"fullWidth\" onChange={handleChange} classes={{ root: classes.tab }}>\r\n        {renderTabsLabels(tabsLabels)}\r\n      </Tabs>\r\n      <SwipeableViews index={value} onChangeIndex={handleChangeIndex}>\r\n        {renderTabsContent(tabsContent)}\r\n      </SwipeableViews>\r\n    </Paper>\r\n  );\r\n};\r\n\r\ninterface TabsProps {\r\n  tabsContent: any[];\r\n  tabsLabels: string[];\r\n}\r\n\r\nconst useStyles = () =>\r\n  makeStyles(() => {\r\n    return {\r\n      container: {\r\n        width: '100%',\r\n        height: '100%',\r\n        '& .react-swipeable-view-container > div': {\r\n          overflow: 'hidden !important',\r\n        },\r\n      },\r\n      tab: {\r\n        backgroundColor: 'white',\r\n      },\r\n    };\r\n  });\r\n","import Tabs from './Tabs';\r\n\r\nexport default Tabs;\r\n","import React from 'react';\r\nimport { Card, Typography, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { NoteContentInterface } from '../../data';\r\n\r\nexport default (props: NoteProps) => {\r\n  const { noteContent } = props;\r\n  const classes = useStyles()();\r\n\r\n  return (\r\n    <Card classes={{ root: classes.card }}>\r\n      <Grid container>\r\n        <Grid item style={{ width: '100%' }}>\r\n          <Typography align=\"left\">{noteContent.content}</Typography>\r\n        </Grid>\r\n        <Grid item style={{ width: '100%' }}>\r\n          <Typography align=\"right\">{noteContent.signature}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\ninterface NoteProps {\r\n  noteContent: NoteContentInterface;\r\n}\r\n\r\nconst useStyles = () =>\r\n  makeStyles(() => {\r\n    return {\r\n      card: {\r\n        minHeight: '100px',\r\n        padding: '15px',\r\n      },\r\n    };\r\n  });\r\n","import Note from './Note';\r\n\r\nexport default Note;\r\n","import NotesTab from './NotesTab';\r\n\r\nexport default NotesTab;\r\n","import React from 'react';\r\nimport { Note } from '../../components';\r\nimport { Grid } from '@material-ui/core';\r\nimport { NoteContentInterface } from '../../data';\r\n\r\nexport default (props: NotesTabProps) => {\r\n  const { notesContent } = props;\r\n\r\n  const renderNotes = (notesContent: any[]) => {\r\n    debugger;\r\n    return notesContent.map(noteContent => {\r\n      return (\r\n        <Grid item xs={4}>\r\n          <Note noteContent={noteContent} />\r\n        </Grid>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      style={{\r\n        padding: '5px',\r\n        maxHeight: '54vh',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden',\r\n      }}>\r\n      {renderNotes(notesContent)}\r\n    </Grid>\r\n  );\r\n};\r\n\r\ninterface NotesTabProps {\r\n  notesContent: NoteContentInterface[];\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Tabs, NotesTab } from './components';\r\nimport { getNotesContent } from './data';\r\n\r\nfunction App() {\r\n  return (\r\n    <Grid container className=\"App\">\r\n      <Grid item style={{ height: '25vh', width: '100%', marginBottom: '2vh' }}>\r\n        <div>placeholder</div>\r\n      </Grid>\r\n      <Grid item style={{ height: '60vh', width: '100%' }}>\r\n        <Tabs\r\n          tabsContent={[<div />, <NotesTab notesContent={getNotesContent()} />, <div />]}\r\n          tabsLabels={['Texto', 'Recados', 'Fotos']}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export interface NoteContentInterface {\r\n  content: string;\r\n  signature: string;\r\n}\r\n\r\nexport default () => {\r\n  const notesContent: NoteContentInterface[] = [\r\n    {\r\n      content: `Eii gabizinha. Só passando aqui pra te dizer o quão incrível, inteligente, talentosa e carismática você \r\n        é. Você é uma pessoa iluminada que eu amei ter conhecido nesses 3 aninhos de cefet. Quero te desejar tudo \r\n        de melhor nesse mundo pq vc merece demaisss. Beijos te adoro muito muito mesmo.`,\r\n      signature: 'João Vitor',\r\n    },\r\n    {\r\n      content: `Feliz aniversário Gabizinha, te desejo tudo de melhor que o mundo possa te oferecer e queria te \r\n        falar que adoro você, uma das pessoas mais incríveis que eu pude conhecer no cefet. Aproveita muito seu \r\n        aniversário, tô morrendo de saudades, espero poder te dar um abraço logo, beijãoooo.`,\r\n      signature: 'Ana Beatriz',\r\n    },\r\n    {\r\n      content: `Amiga, você é uma das pessoas que mais gosto no mundo. você é cheia de amor e brilho e só quem \r\n      te conhece sabe o tamanho do seu coração! Eu quero te desejar todas as coisas mais bonitas que existem, \r\n      muito amor e muita luz (pra poder conseguir enxergar as coisas bonitas lá de trás). Eu te amo e estarei \r\n      sempre aqui mesmo de longinho. Que você tenha um dia especial, feliz aniversário! Beijos.`,\r\n      signature: 'Eve',\r\n    },\r\n    {\r\n      content: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the\r\n        industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and\r\n        scrambled it to make a type specimen book.`,\r\n      signature: 'Signature',\r\n    },\r\n    {\r\n      content: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the\r\n        industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and\r\n        scrambled it to make a type specimen book.`,\r\n      signature: 'Signature',\r\n    },\r\n    {\r\n      content: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the\r\n        industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and\r\n        scrambled it to make a type specimen book.`,\r\n      signature: 'Signature',\r\n    },\r\n    {\r\n      content: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the\r\n        industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and\r\n        scrambled it to make a type specimen book.`,\r\n      signature: 'Signature',\r\n    },\r\n    {\r\n      content: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the\r\n        industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and\r\n        scrambled it to make a type specimen book.`,\r\n      signature: 'Signature',\r\n    },\r\n    {\r\n      content: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the\r\n        industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and\r\n        scrambled it to make a type specimen book.`,\r\n      signature: 'Signature',\r\n    },\r\n    {\r\n      content: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the\r\n        industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and\r\n        scrambled it to make a type specimen book.`,\r\n      signature: 'Signature',\r\n    },\r\n    {\r\n      content: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the\r\n        industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and\r\n        scrambled it to make a type specimen book.`,\r\n      signature: 'Signature',\r\n    },\r\n    {\r\n      content: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the\r\n        industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and\r\n        scrambled it to make a type specimen book.`,\r\n      signature: 'Signature',\r\n    },\r\n    {\r\n      content: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the\r\n        industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and\r\n        scrambled it to make a type specimen book.`,\r\n      signature: 'Signature',\r\n    },\r\n    {\r\n      content: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the\r\n        industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and\r\n        scrambled it to make a type specimen book.`,\r\n      signature: 'Signature',\r\n    },\r\n    {\r\n      content: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the\r\n        industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and\r\n        scrambled it to make a type specimen book.`,\r\n      signature: 'Signature',\r\n    },\r\n    {\r\n      content: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the\r\n        industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and\r\n        scrambled it to make a type specimen book.`,\r\n      signature: 'Signature',\r\n    },\r\n  ];\r\n  return notesContent;\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}